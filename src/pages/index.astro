---
import Layout from "@/layouts/Layout.astro";
import TitleWithUnderline from "@/components/TitleWithUnderline/index.astro";
import PostCard from "@/components/PostCard/index.astro";
import IssueCard from "@/components/IssueCard/index.astro";
import Navbar from "@/components/Navbar/index.astro";
import { ChevronRight } from "lucide-react";
import { getCollection, getEntry } from "astro:content";
import "@fancyapps/ui/dist/fancybox/fancybox.css";

const allPosts = await getCollection("blog");
const issueOrigin = await getEntry("issue", "index");
const issues = issueOrigin.data.issues.map((item) => item);
---

<Layout title="胤的博客">
  <Navbar select={0} />
  <div class="w-full">
    <div class="flex items-center justify-between">
      <h1 class="text-3xl font-bold">胤的博客</h1>
      <div class="w-12 h-12 rounded-full overflow-hidden">
        <img
          src="https://article.biliimg.com/bfs/article/d29fe12c860c2b7a54db6483132fb0cf24d6aeb0.png@.webp"
          alt="avatar"
        />
      </div>
    </div>
    <div class="text-sm mt-4">『 所念皆星河 』</div>
  </div>
  <hr class="my-6" />
  <div class="w-full h-60 rounded-lg overflow-hidden">
    <img
      class="object-cover w-full h-full transition-all duration-700 hover:blur-sm"
      src="https://article.biliimg.com/bfs/article/4b48fa534e5845e609e100f6168f54739c383677.png@.webp"
      alt="banner"
    />
  </div>
  <hr class="my-6" />
  <div class="w-full">
    <TitleWithUnderline title="最新文章" />
  </div>
  <div class="grid grid-cols-1 gap-4 last:border-none">
    {
      allPosts.reverse().map((post, index) => {
        if (index < 5) {
          return <PostCard post={post} />;
        }
      })
    }
  </div>
  <div
    class="flex items-center hover:text-pink transition-colors justify-end mt-2"
  >
    <a href="/post/1">所有文章</a>
    <ChevronRight className="h-4 w-4" />
  </div>

  <div class="w-full mt-6">
    <TitleWithUnderline title="最新说说" />
    {issues.map((item) => <IssueCard issue={item} />)}
  </div>
</Layout>

<script>
  import { Fancybox } from "@fancyapps/ui";

  document.addEventListener("DOMContentLoaded", () => {
    const lazyImages = document.querySelectorAll("img.lazyload");
    const lazyImageObserver = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const image = entry.target as HTMLElement;
          image.classList.remove("lazyload");
          image.setAttribute("src", image.dataset.src ? image.dataset.src : "");
          lazyImageObserver.unobserve(image);
        }
      });
    });
    lazyImages.forEach((image) => {
      lazyImageObserver.observe(image);
    });
    Fancybox.bind("[data-fancybox]", {
      Thumbs: false,
      Toolbar: {
        display: {
          left: [],
          middle: [],
          right: ["close"],
        },
      },
    });
  });
</script>
