---
import { CollectionEntry, getCollection } from "astro:content";
import { BlogName, PerPage, PostPageProps } from "@/config";
import Layout from "@/layouts/Layout.astro";
import PostList from "@/components/Post/PostList.astro";
import PageBanner from "@/components/Banner/PageBanner.astro";
import Pagination from "@/components/Pagination.astro";

interface Props {
  page: {
    data: CollectionEntry<"blog">[];
    start: number;
    end: number;
    total: number;
    currentPage: number;
    size: number;
    lastPage: number;
    url: {
      current: string;
      prev: string | undefined;
      next: string | undefined;
    };
  };
}

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const postlist = await getCollection("blog");
  const posts = postlist
    .filter((post) => !post.data.hide)
    .sort((a, b) => b.data.id - a.data.id)
    .slice(PerPage + 1);
  return paginate(posts, { pageSize: PerPage });
}

const { page } = Astro.props;
---

<Layout title={`${BlogName} - ${PostPageProps.title} - ${page.currentPage}`}>
  <PageBanner
    title={PostPageProps.title}
    description={PostPageProps.description}
    imgsrc={PostPageProps.banner}
    select={0}
  />
  <div class="content px-4 py-4 sm:px-12 sm:py-6 w-full">
    <PostList posts={page.data} />
    <Pagination
      prevUrl={page.url.prev ? page.url.prev : "/"}
      nextUrl={page.url.next}
    />
  </div>
</Layout>
